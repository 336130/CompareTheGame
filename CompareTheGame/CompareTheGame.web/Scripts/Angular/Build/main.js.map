{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/carousel/game-carousel.component.html","webpack:///./src/app/components/carousel/game-carousel.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/game-displays/small-game-display.component.html","webpack:///./src/app/components/game-displays/small-game-display.component.ts","webpack:///./src/app/components/menu/main-menu.component.html","webpack:///./src/app/components/menu/main-menu.component.ts","webpack:///./src/app/components/modals/delete-vendor-modal/delete-vendor-modal.component.html","webpack:///./src/app/components/modals/delete-vendor-modal/delete-vendor-modal.component.ts","webpack:///./src/app/components/modals/edit-vendor-modal/edit-vendor-modal.component.html","webpack:///./src/app/components/modals/edit-vendor-modal/edit-vendor-modal.component.ts","webpack:///./src/app/models/game.model.ts","webpack:///./src/app/models/vendor.model.ts","webpack:///./src/app/services/DataFactory.service.ts","webpack:///./src/app/views/about/about-us.component.html","webpack:///./src/app/views/about/about-us.component.ts","webpack:///./src/app/views/admin/admin.component.html","webpack:///./src/app/views/admin/admin.component.ts","webpack:///./src/app/views/game/game.component.html","webpack:///./src/app/views/game/game.component.ts","webpack:///./src/app/views/home/home.component.html","webpack:///./src/app/views/home/home.component.ts","webpack:///./src/app/views/search/search.component.html","webpack:///./src/app/views/search/search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule, MatDialogModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { NgxGalleryModule } from 'ngx-gallery';\r\n\r\nimport 'hammerjs';\r\n\r\nimport { DataFactory } from './services/DataFactory.service';\r\n\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { GameComponent } from './views/game/game.component';\r\nimport { AboutUsComponent } from './views/about/about-us.component';\r\nimport { SearchComponent } from './views/search/search.component';\r\n\r\nimport { GameCarouselComponent } from './components/carousel/game-carousel.component';\r\nimport { SmallGameDisplay } from './components/game-displays/small-game-display.component';\r\nimport { AdminComponent } from './views/admin/admin.component';\r\nimport { EditVendorModalComponent } from './components/modals/edit-vendor-modal/edit-vendor-modal.component';\r\nimport { DeleteVendorModalComponent } from './components/modals/delete-vendor-modal/delete-vendor-modal.component';\r\n\r\nclass MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    // override hammerjs default configuration\r\n    'pan': { threshold: 5 },\r\n    'swipe': {\r\n      velocity: 0.4,\r\n      threshold: 20,\r\n      direction: 31 // /!\\ ugly hack to allow swipe in all direction\r\n    }\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'game',\r\n    component: GameComponent\r\n  },\r\n  {\r\n    path: 'about',\r\n    component: AboutUsComponent\r\n  },\r\n  {\r\n    path: 'search',\r\n    component: SearchComponent\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: AdminComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    GameComponent,\r\n    AboutUsComponent,\r\n    SearchComponent,\r\n    GameCarouselComponent,\r\n    SmallGameDisplay,\r\n    AdminComponent,\r\n    EditVendorModalComponent,\r\n    DeleteVendorModalComponent\r\n  ],\r\n  providers: [\r\n    DataFactory,\r\n    GameCarouselComponent,\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig \r\n    },\r\n    EditVendorModalComponent,\r\n    DeleteVendorModalComponent\r\n  ],\r\n  entryComponents: [\r\n    GameCarouselComponent,\r\n    SmallGameDisplay,\r\n    EditVendorModalComponent,\r\n    DeleteVendorModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes),\r\n    NgbModule,\r\n    NgxGalleryModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'main-app',\n  template: `\n  <main-menu></main-menu>\n    <div class=\"container body-content\">\n      <router-outlet></router-outlet>\n    </div>\n  <custom-footer></custom-footer>\n  `\n})\n\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MainMenu } from './components/menu/main-menu.component';\r\nimport { Footer } from './components/footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainMenu,\r\n    Footer\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    MainMenu,\r\n    Footer\r\n  ],\r\n  entryComponents: [\r\n    MainMenu,\r\n    Footer\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h2>{{title}}</h2>\\r\\n<ngb-carousel *ngIf=\\\"gamesToDisplay && gamesToDisplay.length\\\" [showNavigationArrows]=\\\"'true'\\\" [showNavigationIndicators]=\\\"'true'\\\" [interval]=\\\"100000\\\">\\r\\n  <ng-template *ngFor=\\\"let game of gamesToDisplay\\\" ngbSlide>\\r\\n    <small-game-display [game]=\\\"game\\\"></small-game-display>\\r\\n  </ng-template>\\r\\n</ngb-carousel>\\r\\n<div class=\\\"carousel-seperator\\\"></div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { Game } from 'src/app/models/game.model';\r\n\r\n@Component({\r\n  selector: 'game-carousel',\r\n  templateUrl:'./game-carousel.component.html'\r\n})\r\n\r\nexport class GameCarouselComponent {\r\n  @Input() title: string;\r\n  @Input() gamesToDisplay;\r\n}\r\n","module.exports = \"\\r\\n<footer>\\r\\n  <hr />\\r\\n  <p>&copy;{{date}} - CompareTheGame</p>\\r\\n</footer>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'custom-footer',\r\n  templateUrl: './footer.component.html'\r\n})\r\n\r\nexport class Footer {\r\n  date = new Date().getFullYear().toString();\r\n}\r\n","module.exports = \"<div class=\\\"ctg-gameContainer\\\" [title]=\\\"game.gameName\\\">\\r\\n  <div class=\\\"col-12\\\" style=\\\"padding: 0 10%\\\">\\r\\n    <h2 class=\\\"text-center ctg-gameTextOverflow\\\">{{game.gameName}}</h2>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" style=\\\"height:330px; padding: 0 10%\\\">\\r\\n    <div class=\\\"col-4 ctg-imageContainer\\\">\\r\\n      <img class=\\\"ctg-image\\\" [src]=\\\"game.coverImageURL\\\" [alt]=\\\"game.gameName\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <div style=\\\"width: 100%; overflow:hidden\\\">\\r\\n        <p *ngIf=\\\"game.modes.length\\\" class=\\\"ctg-gameInfo\\\">\\r\\n          Modes:\\r\\n          <span *ngFor=\\\"let mode of game.modes; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [title]=\\\"mode.name\\\" [queryParams]=\\\"{mode:mode.modeID}\\\">\\r\\n              {{mode.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.genres.length\\\" class=\\\"ctg-gameInfo\\\">\\r\\n          Genres:\\r\\n          <span *ngFor=\\\"let genre of game.genres; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [title]=\\\"genre.name\\\" [queryParams]=\\\"{genre:genre.genreID}\\\">\\r\\n              {{genre.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.themes.length\\\" class=\\\"ctg-gameInfo\\\">\\r\\n          Themes:\\r\\n          <span *ngFor=\\\"let theme of game.themes; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [title]=\\\"theme.name\\\" [queryParams]=\\\"{theme:theme.themeID}\\\">\\r\\n              {{theme.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.perspectives.length\\\" class=\\\"ctg-gameInfo\\\">\\r\\n          Perspectives:\\r\\n          <span *ngFor=\\\"let perspective of game.perspectives; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [title]=\\\"perspective.name\\\" [queryParams]=\\\"{perspective:perspective.perspectiveID}\\\">\\r\\n              {{perspective.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <hr />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"game.summary\\\" style=\\\"width: 100%;max-height:100px;overflow:hidden\\\">\\r\\n        <p class=\\\"ctg-gameSummary\\\">Summmary: {{game.summary}}</p>\\r\\n        <hr />\\r\\n      </div>\\r\\n      <div style=\\\"width:100%;height:100px\\\">\\r\\n        <div>\\r\\n          <p *ngIf=\\\"game.platforms.length\\\" class=\\\"ctg-gameTextOverflow\\\">\\r\\n            Available on:\\r\\n            <span *ngFor=\\\"let platform of game.platforms; let last = last\\\">\\r\\n              <a *ngIf=\\\"platform.abbreviation\\\" class=\\\"ctg-siteButton btn\\\" routerLink=\\\"/search\\\" [queryParams]=\\\"{platform:platform.platformID}\\\" [title]=\\\"'Release Date: ' + (platform.releaseDate | date:'dd/MM/yy')\\\">\\r\\n                {{platform.name}}\\r\\n              </a>\\r\\n            </span>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <a class=\\\"ctg-cheapestContainer ctg-siteButton btn\\\" routerLink=\\\"/game\\\" [queryParams]=\\\"{game:game.gameID}\\\" title=\\\"Click for more information.\\\">\\r\\n        <div class=\\\"ctg-cheapestPlatforms\\\" *ngIf=\\\"game.cheapest\\\">\\r\\n          <span style=\\\"font-size:1.5rem;display:block\\\">\\r\\n            Cheapest at £{{game.cheapestPrice}}\\r\\n          </span>\\r\\n          <span *ngFor=\\\"let price of game.cheapest; let last = last\\\" class=\\\"float-sm-right\\\">\\r\\n            <span *ngIf=\\\"price.platform.abbreviation\\\" [title]=\\\"price.platform.name\\\">| {{price.platform.abbreviation}} |</span>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"ctg-cheapestPlatforms\\\" *ngIf=\\\"!game.cheapest\\\">\\r\\n          <span style=\\\"padding:5px; font-size:1.5rem;\\\">\\r\\n            No prices found...\\r\\n          </span>\\r\\n          <span class=\\\"float-right\\\">\\r\\n            ...for today atleast\\r\\n          </span>\\r\\n        </div>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component,Input } from '@angular/core';\r\nimport { Game } from 'src/app/models/game.model';\r\n\r\n@Component({\r\n  selector: 'small-game-display',\r\n  templateUrl: 'small-game-display.component.html'\r\n})\r\n\r\nexport class SmallGameDisplay {\r\n  @Input() game: Game;\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-light fixed-top navbar-expand-lg bg-light\\\">\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">CompareTheGame</a>\\r\\n\\r\\n      <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"navbar-collapse collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav mr-auto\\\">\\r\\n          <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/search\\\">Search</a></li>\\r\\n          <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/about\\\">About</a></li>\\r\\n          <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/admin\\\">Admin</a></li>\\r\\n        </ul>\\r\\n        <form class=\\\"form-inline\\\" action=\\\"/search\\\" method=\\\"get\\\">\\r\\n          <input class=\\\"form-control\\\" type=\\\"search\\\" placeholder=\\\"Search by game name\\\" />\\r\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"submit\\\">Search</button>\\r\\n        </form>\\r\\n      </div>\\r\\n</nav>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'main-menu',\r\n  templateUrl: './main-menu.component.html'\r\n})\r\n\r\nexport class MainMenu {\r\n  constructor() {\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"ctg-modalContainer\\\">\\r\\n  <i class=\\\"fa fa-remove ctg-modalCloseButton\\\" (click)=\\\"CloseModal()\\\"></i>\\r\\n  <div class=\\\"row\\\" style=\\\"margin-left:0px\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h4>Delete Vendor: {{vendor.name}}</h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <p class=\\\"text-center\\\">Confirm you wish to delete the vendor?</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\" *ngIf=\\\"errors && errors.length\\\">\\r\\n      <p *ngFor=\\\"let error of errors\\\">{{error}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 ctg-modalButton\\\">\\r\\n      <button class=\\\"btn ctg-siteButton form-control\\\" (click)=\\\"DeleteVendor()\\\"><i class=\\\"fa fa-remove\\\"></i>Delete</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Vendor } from 'src/app/models/vendor.model';\r\n\r\n@Component({\r\n  selector: 'delete-vendor-modal',\r\n  templateUrl: 'delete-vendor-modal.component.html'\r\n})\r\n\r\nexport class DeleteVendorModalComponent {\r\n  constructor(private dataFactory: DataFactory,\r\n    @Inject(MAT_DIALOG_DATA) data,\r\n    private dialogRef: MatDialogRef<DeleteVendorModalComponent>) {\r\n    this.vendor = data.Vendor;\r\n    this.dialogRef = dialogRef;\r\n  }\r\n\r\n  vendor: Vendor;\r\n  errors: string[] = [];\r\n\r\n  CloseModal(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  DeleteVendor() {\r\n    this.dataFactory.DeleteVendor(this.vendor).subscribe(\r\n      (data) => {\r\n        this.dialogRef.close(true);\r\n      },\r\n      (err) => {\r\n        this.errors = [err.message];\r\n        console.log(err);\r\n      },\r\n      () => {}\r\n    )\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"ctg-modalContainer\\\">\\r\\n  <i class=\\\"fa fa-remove ctg-modalCloseButton\\\" (click)=\\\"CloseModal()\\\"></i>\\r\\n  <form class=\\\"row\\\" style=\\\"margin-left:0px\\\" [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h4>{{title}}</h4>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Name</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input class=\\\"form-control\\\" required formControlName=\\\"name\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Logo URL</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input class=\\\"form-control\\\" formControlName=\\\"logoURL\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Logo Preview</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <img style=\\\"max-width:100%; max-height:400px;\\\" [src]=\\\"form.controls['logoURL'].value\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Font</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input class=\\\"form-control\\\" formControlName=\\\"font\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Home Page URL</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input class=\\\"form-control\\\" required formControlName=\\\"url\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Element Type</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"elementType\\\">\\r\\n        <option value=\\\"\\\" selected></option>\\r\\n        <option value=\\\"ID\\\">ID</option>\\r\\n        <option value=\\\"CLASS\\\">CLASS</option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col-4\\\"><p class=\\\"text-right\\\">Element Value</p></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input class=\\\"form-control\\\" formControlName=\\\"elementValue\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 bk-dark\\\" *ngIf=\\\"errors && errors.length\\\">\\r\\n      <p class=\\\"text-light\\\" *ngFor=\\\"let error of errors\\\">{{error}}</p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div [hidden]=\\\"loading <= 0\\\" class=\\\"col-12\\\">\\r\\n      <mat-spinner [diameter]=\\\"75\\\" [color]=\\\"'warn'\\\" style=\\\"margin-left:42%; margin-top: 50px;\\\"></mat-spinner>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 ctg-modalButton\\\">\\r\\n      <button class=\\\"btn ctg-siteButton form-control\\\" (click)=\\\"AddOrUpdateVendor()\\\">\\r\\n        <span *ngIf=\\\"isNew\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i> Add\\r\\n        </span>\\r\\n        <span *ngIf=\\\"!isNew\\\">\\r\\n          <i class=\\\"fa fa-save\\\"></i> Save\\r\\n        </span>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core'\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { Vendor } from 'src/app/models/vendor.model';\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'edit-vendor-modal',\r\n  templateUrl: './edit-vendor-modal.component.html'\r\n})\r\n\r\nexport class EditVendorModalComponent implements OnInit {\r\n  constructor(private dialogRef: MatDialogRef<EditVendorModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data,\r\n    private dataFactory: DataFactory) {\r\n    if (data != null && data.Vendor != null) {\r\n      this.title = \"Edit Vendor: \" + data.Vendor.name;\r\n      //make a clean copy of passed in vendor\r\n      this.vendor = JSON.parse(JSON.stringify(data.Vendor));\r\n      this.isNew = false;\r\n    } else {\r\n      this.title = \"New Vendor\";\r\n      this.vendor = new Vendor();\r\n      this.isNew = true;\r\n    }\r\n  }\r\n\r\n  form: FormGroup;\r\n  title = \"\";\r\n  vendor: Vendor;\r\n  isNew: boolean;\r\n  errors: string[];\r\n  loading: number = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(this.vendor.name, Validators.required),\r\n      url: new FormControl(this.vendor.url, Validators.required),\r\n      font: new FormControl(this.vendor.font),\r\n      logoURL: new FormControl(this.vendor.logoURL),\r\n      elementType: new FormControl(this.vendor.elementType),\r\n      elementValue: new FormControl(this.vendor.elementValue)\r\n    })\r\n  }\r\n\r\n  CloseModal(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  IsValid(): boolean {\r\n//if untouched return immediately.\r\n    if (this.form.pristine) return false;\r\n    \r\n    let errors: string[] = [];\r\n\r\n    let vendor: Vendor = this.form.value;\r\n\r\n    let valid: boolean = true;\r\n    if (this.vendor) {\r\n      if (!this.isNew) {\r\n        let editFound = false;\r\n        if (vendor.name != this.vendor.name &&\r\n          vendor.font != this.vendor.font &&\r\n          vendor.logoURL != this.vendor.logoURL &&\r\n          vendor.url != this.vendor.url &&\r\n          vendor.elementType != this.vendor.elementType &&\r\n          vendor.elementValue != this.vendor.elementValue) {\r\n          editFound = true;\r\n        }\r\n        valid = editFound;\r\n        errors.push(\"No changes found.\");\r\n      }\r\n\r\n      if (!vendor.name) {\r\n        valid = false;\r\n        errors.push('Vendor must have a name.');\r\n      }\r\n      if (!vendor.logoURL && !vendor.font) {\r\n        valid = false;\r\n        errors.push('You must provide either a logoURL or a font in which to display the vendor\\'s name.');\r\n      }\r\n      if (vendor.logoURL && (!vendor.logoURL.match(/http/) && !vendor.logoURL.match(/www/))) {\r\n        valid = false;\r\n        errors.push('Logo URL should start with \"http://\" or \"www.\".');\r\n      }\r\n      if (!vendor.url) {\r\n        valid = false;\r\n        errors.push('You must provide a vendor home page URL.');\r\n      }\r\n      if (vendor.url && (!vendor.url.match(/http/) && !vendor.logoURL.match(/www/))) {\r\n        valid = false;\r\n        errors.push('Home Page URL should start with \"http://\" or \"www.\".');\r\n      }\r\n    } else {\r\n      valid = false;\r\n    }\r\n    this.errors = errors;\r\n    return valid;\r\n  }\r\n\r\n  AddOrUpdateVendor() {\r\n    if (this.IsValid()) {\r\n      this.loading++;\r\n      let vendor: Vendor = this.form.value;\r\n\r\n      //pass up original values\r\n      vendor.createdBy = this.vendor.createdBy;\r\n      vendor.createdDate = this.vendor.createdDate;\r\n      vendor.vendorID = this.vendor.vendorID;\r\n\r\n      this.dataFactory.EditVendor(vendor).subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            this.dialogRef.close(true);\r\n          } else {\r\n            this.errors = [\"Error saving vendor.\"];\r\n          }\r\n        },\r\n        (err) => {\r\n          this.errors = [err.message];\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          this.loading--;\r\n        })\r\n    }\r\n  }\r\n}\r\n","import { Genre } from './genre.model';\r\nimport { Mode } from './mode.model';\r\nimport { Theme } from './theme.model';\r\nimport { Perspective } from './perspective.model';\r\nimport { Screenshot } from './screenshot.model';\r\nimport { Platform } from './platform.model';\r\nimport { PriceHistory } from './price-history.model';\r\n\r\nexport class Game {\r\n  gameID: number;\r\n  gameName: string;\r\n  URL: string;\r\n  coverImageURL: string;\r\n  summary: string;\r\n  firstReleaseDate: Date;\r\n  genres: Genre[];\r\n  modes: Mode[];\r\n  themes: Theme[];;\r\n  perspectives: Perspective[];\r\n  screenshots: Screenshot[];\r\n  platforms: Platform[];\r\n  priceHistory: PriceHistory[];\r\n  todaysPrices: PriceHistory[];\r\n  cheapest: PriceHistory[];\r\n  cheapestPrice: string;\r\n  published: boolean;\r\n}\r\n","import { VendorGameSetting } from './vendor-game-settings.model';\r\n\r\nexport class Vendor {\r\n  vendorID: number;\r\n  abbreviation: string;\r\n  name: string;\r\n  url: string;\r\n  logoURL: string;\r\n  font: string;\r\n  elementType: string;\r\n  elementValue: string;\r\n  createdDate: Date;\r\n  createdBy: string;\r\n  modifiedDate: Date;\r\n  modifiedBy: string;\r\n  settings: VendorGameSetting[];\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs'\r\nimport { HomePageResponse } from '../models/home-page-response.model';\r\nimport { Game } from '../models/game.model';\r\nimport { SearchOptions } from '../models/search-options.mmodel';\r\nimport { Vendor } from '../models/vendor.model';\r\n\r\n@Injectable()\r\nexport class DataFactory {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  GetHomePageData(): Observable<HomePageResponse> {\r\n    return this.http.get<HomePageResponse>(apiUrl + \"game/getHomepageData\");\r\n  };\r\n\r\n  GetSearchOptions(): Observable<SearchOptions> {\r\n    return this.http.get<SearchOptions>(apiUrl + \"game/getsearchoptions\");\r\n  }\r\n\r\n  FetchGame(gameID: string): Observable<Game> {\r\n    return this.http.get<Game>(apiUrl + \"game/getgame\", { params: { gameID: gameID } })\r\n  }\r\n\r\n  SearchForGame(gameName: string): Observable<Game[]> {\r\n    return this.http.get<Game[]>(apiUrl + \"game/searchforgame\", { params: { gameName: gameName } });;\r\n  }\r\n\r\n  //ADMIN PAGE\r\n  GetVendors(): Observable<Vendor[]> {\r\n    return this.http.get<Vendor[]>(apiUrl + \"admin/getvendors\");;\r\n  }\r\n\r\n  GetAllGames(): Observable<Game[]> {\r\n    return this.http.get<Game[]>(apiUrl + \"admin/getallgames\");\r\n  }\r\n\r\n  EditVendor(vendor: Vendor): Observable<any> {\r\n    return this.http.post(apiUrl + \"admin/savevendor\", vendor);\r\n  }\r\n\r\n  DeleteVendor(vendor: Vendor): Observable<any> {\r\n    return this.http.post(apiUrl + \"admin/deletevendor\", vendor);\r\n  }\r\n}\r\n\r\n\r\nconst apiUrl = \"api/\";\r\n","module.exports = \"<p>{{title}}</p>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './about-us.component.html'\r\n})\r\n\r\nexport class AboutUsComponent {\r\n  title = \"About Us\";\r\n}\r\n","module.exports = \"<h1>Admin</h1>\\r\\n<div class=\\\"ctg-container\\\">\\r\\n  <ngb-tabset>\\r\\n    <ngb-tab title=\\\"Vendors\\\">\\r\\n      <ng-template ngbTabContent>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <button class=\\\" btn ctg-siteButton\\\" (click)=\\\"AddNewVendor()\\\"><i class=\\\"fa fa-plus\\\"></i> Add a new Vendor</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <table class=\\\"table table-bordered table-striped table-dark\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Name</th>\\r\\n              <th>Logo</th>\\r\\n              <th>Font</th>\\r\\n              <th>Game Scrap Configs</th>\\r\\n              <th>Element Type</th>\\r\\n              <th>Element Value</th>\\r\\n              <th>Edit</th>\\r\\n              <th>Delete</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngIf=\\\"vendors && vendors.length && !loading\\\">\\r\\n            <tr *ngFor=\\\"let vendor of vendors\\\">\\r\\n              <td>{{vendor.vendorID}}</td>\\r\\n              <td>{{vendor.name}}</td>\\r\\n              <td>\\r\\n                <img *ngIf=\\\"vendor.logoURL\\\" style=\\\"max-width: 100%; max-height:50px;\\\" [src]=\\\"vendor.logoURL\\\" [alt]=\\\"vendor.name.toUpperCase()\\\" />\\r\\n                <b *ngIf=\\\"!vendor.logoURL\\\" [ngStyle]=\\\"{'font-family':vendor.font}\\\">{{vendor.name.toUpperCase()}}</b>\\r\\n              </td>\\r\\n              <td><p *ngIf=\\\"!vendor.logoURL\\\">{{vendor.font}}</p></td>\\r\\n              <td>{{vendor.settings.length}}</td>\\r\\n              <td>{{vendor.elementType}}</td>\\r\\n              <td>{{vendor.elementValue}}</td>\\r\\n              <td><i (click)=\\\"EditVendor(vendor)\\\" class=\\\"fa fa-edit fa-2x\\\"></i></td>\\r\\n              <td><i (click)=\\\"DeleteVendor(vendor)\\\" class=\\\"fa fa-remove fa-2x\\\"></i></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div [hidden]=\\\"loading <= 0\\\">\\r\\n          <mat-spinner [diameter]=\\\"150\\\" [color]=\\\"'warn'\\\" style=\\\"margin-left:42%; margin-top: 50px;\\\"></mat-spinner>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab title=\\\"Games\\\">\\r\\n      <ng-template ngbTabContent>\\r\\n        <table class=\\\"table table-bordered table-striped table-dark\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>Name</th>\\r\\n              <th>Platforms</th>\\r\\n              <th>Screenshots</th>\\r\\n              <th>Story</th>\\r\\n              <th>Summary</th>\\r\\n              <th>Published</th>\\r\\n              <th>Edit</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngIf=\\\"games && games.length && !loading\\\">\\r\\n            <tr *ngFor=\\\"let game of games\\\">\\r\\n              <td>{{game.gameID}}</td>\\r\\n              <td>{{game.gameName}}</td>\\r\\n              <td>{{game.platforms.length}}</td>\\r\\n              <td>{{game.screenshots.length}}</td>\\r\\n              <td><i class=\\\"fa fa-check\\\" *ngIf=\\\"game.storyLine\\\"></i></td>\\r\\n              <td><i class=\\\"fa fa-check\\\" *ngIf=\\\"game.summary\\\"></i></td>\\r\\n              <td><i class=\\\"fa fa-check\\\" *ngIf=\\\"game.published\\\"></i></td>\\r\\n              <td><i class=\\\"fa fa-edit fa-2x\\\"></i></td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div [hidden]=\\\"loading <= 0\\\" class=\\\"row\\\">\\r\\n          <mat-spinner [diameter]=\\\"150\\\" [color]=\\\"'warn'\\\" style=\\\"margin-left:42%; margin-top: 50px;\\\"></mat-spinner>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n  </ngb-tabset>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material';\r\n\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\n\r\nimport { Vendor } from 'src/app/models/vendor.model';\r\nimport { Game } from 'src/app/models/game.model';\r\nimport { EditVendorModalComponent } from 'src/app/components/modals/edit-vendor-modal/edit-vendor-modal.component';\r\nimport { DeleteVendorModalComponent } from 'src/app/components/modals/delete-vendor-modal/delete-vendor-modal.component';\r\n\r\n@Component({\r\n  selector: 'admin',\r\n  templateUrl: 'admin.component.html'\r\n})\r\n\r\nexport class AdminComponent implements OnInit {\r\n  constructor(private dataFactory: DataFactory,\r\n    private dialog: MatDialog) { }\r\n\r\n  loading: number = 0;\r\n  vendors: Vendor[];\r\n  games: Game[];\r\n\r\n  editVendorDialogRef: MatDialogRef<EditVendorModalComponent>;\r\n  deleteVendorDialogRef: MatDialogRef<DeleteVendorModalComponent>;\r\n\r\n  ngOnInit(): void {\r\n    this.GetGames();\r\n    this.GetVendors();\r\n  }\r\n\r\n  GetGames() {\r\n    this.loading++;\r\n    this.dataFactory.GetAllGames().subscribe(\r\n      (data) => {\r\n        this.games = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        this.loading--;\r\n      }\r\n    );\r\n  }\r\n\r\n  GetVendors() {\r\n    this.loading++;\r\n    this.dataFactory.GetVendors().subscribe(\r\n      (data) => {\r\n        this.vendors = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        this.loading--;\r\n      }\r\n    );\r\n  }\r\n\r\n  AddNewVendor = () => {\r\n    const dialogConfig = this.GetDialogConfig();\r\n    this.editVendorDialogRef = this.dialog.open(EditVendorModalComponent, dialogConfig);\r\n    this.editVendorDialogRef.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.GetVendors();\r\n      }\r\n    })\r\n  }\r\n\r\n  EditVendor(vendor: Vendor) {\r\n    const dialogConfig = this.GetDialogConfig(vendor);\r\n    this.editVendorDialogRef = this.dialog.open(EditVendorModalComponent, dialogConfig);\r\n    this.editVendorDialogRef.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.GetVendors();\r\n      }\r\n    })\r\n  }\r\n\r\n  DeleteVendor(vendor: Vendor) {\r\n    const dialogConfig = this.GetDialogConfig(vendor);\r\n    this.deleteVendorDialogRef = this.dialog.open(DeleteVendorModalComponent, dialogConfig);\r\n    this.deleteVendorDialogRef.afterClosed().subscribe((data) => {\r\n      if (data) {\r\n        this.GetVendors();\r\n      }\r\n    })\r\n  }\r\n\r\n  GetDialogConfig(data:any = null): MatDialogConfig {\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.width = '700px';\r\n    dialogConfig.height = '500px';\r\n    dialogConfig.position = { top: '100px' };\r\n    dialogConfig.data = { Vendor: data };\r\n    return dialogConfig;\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"game && !loading\\\">\\r\\n  <h1>{{game.gameName}}</h1>\\r\\n  <div class=\\\"ctg-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <img style=\\\"width:100%; height: auto\\\" [src]=\\\"game.coverImageURL\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <p *ngIf=\\\"game.modes.length\\\">\\r\\n          <b>Modes:</b>\\r\\n          <span *ngFor=\\\"let mode of game.modes; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [queryParams]=\\\"{mode:mode.modeID}\\\">\\r\\n              {{mode.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.genres.length\\\">\\r\\n          <b>Genres:</b>\\r\\n          <span *ngFor=\\\"let genre of game.genres; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [queryParams]=\\\"{genre:genre.genreID}\\\">\\r\\n              {{genre.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.themes.length\\\">\\r\\n          <b>Themes:</b>\\r\\n          <span *ngFor=\\\"let theme of game.themes; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [queryParams]=\\\"{theme:theme.themeID}\\\">\\r\\n              {{theme.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.perspectives.length\\\">\\r\\n          <b>Perspectives:</b>\\r\\n          <span *ngFor=\\\"let perspective of game.perspectives; let last = last\\\">\\r\\n            <a routerLink=\\\"/search\\\" class=\\\"ctg-siteButton btn\\\" [queryParams]=\\\"{perspective:perspective.perspectiveID}\\\">\\r\\n              {{perspective.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n        <p *ngIf=\\\"game.platforms.length\\\">\\r\\n          <b>Available on:</b>\\r\\n          <span *ngFor=\\\"let platform of game.platforms; let last = last\\\">\\r\\n            <a *ngIf=\\\"platform.abbreviation\\\" class=\\\"ctg-siteButton btn\\\" routerLink=\\\"/search\\\" [queryParams]=\\\"{platform:platform.platformID}\\\" [title]=\\\"'Release Date: ' + (platform.releaseDate | date:'dd/MM/yy')\\\">\\r\\n              {{platform.name}}\\r\\n            </a>\\r\\n          </span>\\r\\n        </p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <ngb-tabset>\\r\\n          <ngb-tab title=\\\"Game Information\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"col-12 position-relative\\\" *ngIf=\\\"game.summary\\\">\\r\\n                <h5>Summary</h5>\\r\\n                <p class=\\\"ctg-gameText\\\" [ngClass]=\\\"{'ctg-gameTextCollapsed':summaryCollapsed}\\\">\\r\\n                  {{game.summary}}\\r\\n                </p>\\r\\n                <button (click)=\\\"summaryCollapsed = !summaryCollapsed\\\" class=\\\"ctg-siteButton float-right btn\\\">\\r\\n                  <span *ngIf=\\\"summaryCollapsed\\\">More</span>\\r\\n                  <span *ngIf=\\\"!summaryCollapsed\\\">Less</span>\\r\\n                </button>\\r\\n                <hr />\\r\\n              </div>\\r\\n              <div class=\\\"col-12 position-relative\\\" *ngIf=\\\"game.storyLine\\\">\\r\\n                <h5>Story</h5>\\r\\n                <p class=\\\"ctg-gameText\\\" [ngClass]=\\\"{'ctg-gameTextCollapsed':storyLineCollapsed}\\\">\\r\\n                  {{game.storyLine}}\\r\\n                </p>\\r\\n                <button (click)=\\\"storyLineCollapsed = !storyLineCollapsed\\\" class=\\\"ctg-siteButton float-right btn\\\">\\r\\n                  <span *ngIf=\\\"storyLineCollapsed\\\">More</span>\\r\\n                  <span *ngIf=\\\"!storyLineCollapsed\\\">Less</span>\\r\\n                </button>\\r\\n                <hr />\\r\\n              </div>\\r\\n              <div class=\\\"col-12\\\" *ngIf=\\\"galleryImages && galleryImages.length\\\">\\r\\n                <h5>Screenshots</h5>\\r\\n                <div class=\\\"col-sm-2\\\"></div>\\r\\n                <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\r\\n                <div class=\\\"col-sm-2\\\"></div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n          <ngb-tab title=\\\"Today's Prices\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n              <hr />\\r\\n              <ngb-tabset *ngIf=\\\"todaysPrices && todaysPrices.length\\\">\\r\\n                <ngb-tab *ngFor=\\\"let consoleArray of todaysPrices\\\" [title]=\\\"consoleArray[0].platform.name\\\">\\r\\n                  <ng-template ngbTabContent>\\r\\n                    <div class=\\\"col-12 ctg-priceContainer\\\" *ngFor=\\\"let price of consoleArray\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                          <a target=\\\"_blank\\\" class=\\\"ctg-link\\\" [href]=\\\"price.vendor.homepageURL\\\">\\r\\n                            <img *ngIf=\\\"price.vendor.logoURL\\\" style=\\\"max-width: 100%; max-height:50px;\\\" [src]=\\\"price.vendor.logoURL\\\" [alt]=\\\"price.vendor.name.toUpperCase()\\\" />\\r\\n                            <b *ngIf=\\\"!price.vendor.logoURL\\\" [ngStyle]=\\\"{'font-family':price.vendor.font}\\\">{{price.vendor.name.toUpperCase()}}</b>\\r\\n                          </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                          Currently sold for £{{price.price}}\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\">\\r\\n                          <a target=\\\"_blank\\\" style=\\\"margin: 10px 20px\\\" class=\\\"btn ctg-siteButton\\\" [href]=\\\"price.pageURL\\\">Go to site</a>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ngb-tab>\\r\\n              </ngb-tabset>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n          <ngb-tab title=\\\"How's the week gone\\\">\\r\\n            <ng-template ngbTabContent>\\r\\n              Third tab\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\nimport { Game } from 'src/app/models/game.model';\r\nimport { NgxGalleryAnimation, NgxGalleryOptions, NgxGalleryImage } from 'ngx-gallery';\r\nimport { PriceHistory } from 'src/app/models/price-history.model';\r\n\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './game.component.html'\r\n})\r\n\r\nexport class GameComponent implements OnInit {\r\n\r\n  game: Game;\r\n  loading: boolean = false;\r\n  summaryCollapsed: boolean = true;\r\n  storyLineCollapsed: boolean = true;\r\n  todaysPrices: [][];\r\n\r\n  galleryImages: NgxGalleryImage[];\r\n  galleryOptions: NgxGalleryOptions[] = [\r\n    {\r\n      width:'100%',\r\n      height: '400px',\r\n      thumbnailsColumns: 4,\r\n      imageAnimation: NgxGalleryAnimation.Slide\r\n    },\r\n    // max-width 800\r\n    {\r\n      breakpoint: 800,\r\n      width: '100%',\r\n      height: '400px',\r\n    },\r\n    // max-width 400\r\n    {\r\n      breakpoint: 400,\r\n      preview: false\r\n    }\r\n  ];\r\n\r\n  constructor(private route: ActivatedRoute, private dataFactory: DataFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.route.queryParamMap.subscribe(params => {\r\n      this.dataFactory.FetchGame(params.get(\"game\")).subscribe(\r\n        (data) => {\r\n          this.game = data;\r\n          this.FormatPageData();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }, () => {\r\n          this.loading = false;\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  FormatPageData() {\r\n    if (this.game) {\r\n      this.galleryImages = [];\r\n      this.game.screenshots.forEach(screenshot => {\r\n        this.galleryImages.push({\r\n          small: screenshot.url,\r\n          medium: screenshot.url,\r\n          big: screenshot.url\r\n        });\r\n      });\r\n      if (this.game.todaysPrices && this.game.todaysPrices.length) {\r\n        this.todaysPrices = this.FormatPriceHistoryToConsoles(this.game.todaysPrices);\r\n      }\r\n    }\r\n  }\r\n\r\n  FormatPriceHistoryToConsoles(prices: PriceHistory[]) {\r\n    var grouped = {}, retVal = [];\r\n    prices.forEach(price => {\r\n      (grouped[price.platform.name] = grouped[price.platform.name] || []).push(price);\r\n    })\r\n\r\n    for (var key in grouped) {\r\n      retVal.push(grouped[key]);\r\n    }\r\n\r\n    return retVal;;\r\n  }\r\n}\r\n","module.exports = \"<div *ngIf=\\\"games\\\">\\r\\n  <game-carousel *ngIf=\\\"games.recentlyReleased.length\\\"\\r\\n            title=\\\"Recently Released\\\"\\r\\n            [gamesToDisplay]=\\\"games.recentlyReleased\\\"></game-carousel>\\r\\n  <hr/>\\r\\n  <game-carousel *ngIf=\\\"games.soonToBeReleased.length\\\"\\r\\n            title=\\\"Soon To Be Released\\\"\\r\\n            [gamesToDisplay]=\\\"games.soonToBeReleased\\\"></game-carousel>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\nimport { HomePageResponse } from 'src/app/models/home-page-response.model';\r\n\r\n\r\n@Component({\r\n  selector: '',\r\n  templateUrl:'./home.component.html' \r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  constructor(public dataFactory: DataFactory) { };\r\n\r\n  games: HomePageResponse;\r\n  title = \"\"\r\n\r\n  ngOnInit(): void {\r\n    this.dataFactory.GetHomePageData().subscribe(\r\n      (data) => {\r\n        this.games = data;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n      );\r\n    }\r\n}\r\n","module.exports = \"<h1>Search</h1>\\r\\n<div class=\\\"ctg-container\\\">\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"gameName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Search by game name\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <button (click)=\\\"SearchForGame()\\\" class=\\\"btn btn-outline-dark form-control bg-light\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showFilters\\\" [@slideInOut]>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <p class=\\\"text-right\\\">Genre:</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <select [(ngModel)]=\\\"selectedGenre\\\" name=\\\"genres\\\" class=\\\"form-control\\\">\\r\\n          <option value=0 selected>-- All Genres --</option>\\r\\n          <option *ngFor=\\\"let genre of genres\\\" value=\\\"{{genre.genreID}}\\\">{{genre.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <p class=\\\"text-right\\\">Themes:</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <select [(ngModel)]=\\\"selectedTheme\\\" name=\\\"themes\\\" class=\\\"form-control\\\">\\r\\n          <option value=0 selected>-- All Themes --</option>\\r\\n          <option *ngFor=\\\"let theme of themes\\\" value=\\\"{{theme.themeID}}\\\">{{theme.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <p class=\\\"text-right\\\">Perspectives:</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <select [(ngModel)]=\\\"selectedPerspective\\\" name=\\\"perspectives\\\" class=\\\"form-control\\\">\\r\\n          <option value=0 selected>-- All Perspectives --</option>\\r\\n          <option *ngFor=\\\"let perspective of perspectives\\\" value=\\\"{{perspective.perspectiveID}}\\\">{{perspective.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <p class=\\\"text-right\\\">Mode:</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <select [(ngModel)]=\\\"selectedMode\\\" name=\\\"modes\\\" class=\\\"form-control\\\">\\r\\n          <option value=0 selected>-- All Modes --</option>\\r\\n          <option *ngFor=\\\"let mode of modes\\\" value=\\\"{{mode.modeID}}\\\">{{mode.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <p class=\\\"text-right\\\">Platform:</p>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <select [(ngModel)]=\\\"selectedPlatform\\\" name=\\\"platforms\\\" class=\\\"form-control\\\">\\r\\n          <option value=0 selected>-- All Platforms --</option>\\r\\n          <option *ngFor=\\\"let platform of platforms\\\" value=\\\"{{platform.platformID}}\\\">{{platform.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button class=\\\"btn btn-outline-dark bg-light form-control\\\" (click)=\\\"ApplyFilters()\\\">Apply</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-center link\\\" (click)=\\\"showFilters = !showFilters\\\" >\\r\\n        <hr *ngIf=\\\"showFilters\\\"/>\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        Show Filters\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n        <i [ngClass]=\\\"{'fa-chevron-down':!showFilters,'fa-chevron-up':showFilters}\\\" class=\\\"fa fa-chevron-down\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <hr />\\r\\n  <p>Showing: {{gamesToDisplay.length}}/{{searchResults.length}}</p>\\r\\n  <div *ngIf=\\\"searchResults && searchResults.length && !loading\\\">\\r\\n    <hr />\\r\\n    <div *ngFor=\\\"let game of gamesToDisplay\\\">\\r\\n      <small-game-display [game]=\\\"game\\\"></small-game-display>\\r\\n      <hr />\\r\\n    </div>\\r\\n  </div>\\r\\n  <div [hidden]=\\\"loading <= 0\\\">\\r\\n    <mat-spinner [diameter]=\\\"150\\\" [color]=\\\"'warn'\\\" style=\\\"margin-left:42%; margin-top: 50px;\\\"></mat-spinner>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, transition, animate, style } from '@angular/animations'\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\n\r\nimport { DataFactory } from 'src/app/services/DataFactory.service';\r\nimport { Genre } from 'src/app/models/genre.model';\r\nimport { Theme } from 'src/app/models/theme.model';\r\nimport { Perspective } from 'src/app/models/perspective.model';\r\nimport { Mode } from 'src/app/models/mode.model';\r\nimport { Platform } from 'src/app/models/platform.model';\r\nimport { Game } from 'src/app/models/game.model';\r\nimport { EditVendorModalComponent } from 'src/app/components/modals/edit-vendor-modal/edit-vendor-modal.component';\r\n\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './search.component.html',\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateY(-100%)' }),\r\n        animate('200ms ease-in', style({ transform: 'translateY(0%)' }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('200ms ease-in', style({ transform: 'translateY(-100%)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class SearchComponent implements OnInit {\r\n  constructor(private dataFactory: DataFactory) {\r\n  }\r\n\r\n  loading: number = 0;\r\n  showFilters: boolean = false;\r\n\r\n  genres: Genre[];\r\n  themes: Theme[];\r\n  perspectives: Perspective[];\r\n  modes: Mode[];\r\n  platforms: Platform[];\r\n\r\n  // user input\r\n  gameName: string = \"\";\r\n  selectedGenre: string = \"0\";\r\n  selectedTheme: string = \"0\";\r\n  selectedPerspective: string = \"0\";\r\n  selectedMode: string = \"0\";\r\n  selectedPlatform: string = \"0\";\r\n\r\n  searchResults: Game[] = [];\r\n  gamesToDisplay: Game[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.loading++;\r\n    this.dataFactory.GetSearchOptions().subscribe(\r\n      (data) => {\r\n        this.genres = data.genres;\r\n        this.themes = data.themes;\r\n        this.perspectives = data.perspectives;\r\n        this.modes = data.modes;\r\n        this.platforms = data.platforms;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        this.loading--;\r\n      }\r\n    )\r\n  }\r\n\r\n  SearchForGame(): void {\r\n    this.loading++;\r\n    this.dataFactory.SearchForGame(this.gameName).subscribe(\r\n      (data) => {\r\n        this.searchResults = data;\r\n        this.ApplyFilters();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        this.loading--;\r\n      }\r\n    );\r\n  }\r\n\r\n  ApplyFilters(): void {\r\n    this.loading++;\r\n    let temp: Game[] = this.searchResults;\r\n    if (this.searchResults && this.searchResults.length) {\r\n      temp = parseInt(this.selectedTheme) ? temp.filter(g => g.themes.map(t => t.themeID).includes(parseInt(this.selectedTheme))) : temp;\r\n      temp = parseInt(this.selectedPlatform) ? temp.filter(g => g.platforms.map(t => t.platformID).includes(parseInt(this.selectedPlatform))) : temp;\r\n      temp = parseInt(this.selectedPerspective) ? temp.filter(g => g.perspectives.map(p => p.perspectiveID).includes(parseInt(this.selectedPerspective))) : temp;\r\n      temp = parseInt(this.selectedMode) ? temp.filter(g => g.modes.map(m => m.modeID).includes(parseInt(this.selectedMode))) : temp;\r\n      temp = parseInt(this.selectedGenre) ? temp.filter(g => g.genres.map(g => g.genreID).includes(parseInt(this.selectedGenre))) : temp;\r\n    }\r\n    this.gamesToDisplay = temp;\r\n    this.loading--;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}